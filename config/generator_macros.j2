{# Usage: {%- import "generator_macros.j2" as macros -%} #}
{# {{ macros.linebreak(text) }} #}

{%- macro linebreak(s) %}
{%- set parts = s.split(": ") -%}
"{{ parts[0] }}: "
{% for part in parts[1].split(", ") %}
"{{ part }}{% if not loop.last %}, {% endif %}"
{%- endfor %}
{% endmacro -%}

{% macro canonical_ref() -%}
# These tests are auto-generated with test data from:
# https://github.com/exercism/problem-specifications/tree/main/exercises/{{ exercise }}/canonical-data.json
# File last updated on {{ current_date }}
{%- endmacro %}

{% macro header(imports=[], ignore=[]) -%}

app [main] {
    pf: platform "https://github.com/roc-lang/basic-cli/releases/download/0.14.0/dC5ceT962N_4jmoyoffVdphJ_4GlW3YMhAPyGPr-nU0.tar.br"
{%- if imports -%}
{%- for name in imports -%},
    {% if name == "unicode" -%}
    unicode: "https://github.com/roc-lang/unicode/releases/download/0.1.1/-FQDoegpSfMS-a7B0noOnZQs3-A2aq9RSOR5VVLMePg.tar.br"
    {%- endif -%}
{%- endfor -%}
{%- endif %}
}

import pf.Task exposing [Task]

main =
    Task.ok {}

{%- endmacro %}

