{%- import "generator_macros.j2" as macros with context -%}
{{ macros.canonical_ref() }}
{{ macros.header() }}

import {{ exercise | to_pascal }} exposing [allergicTo, list]

{% for outerCase in cases -%}
{% for case in outerCase["cases"] %}
# {{ outerCase["description"] }} {{ case["description"] | default('') }}
expect
    {%- if case["property"] == "allergicTo" %}
    result = allergicTo {{ case["input"]["item"] | to_pascal }} {{ case["input"]["score"] | to_roc }}
    result == {{ case["expected"] | to_roc }}
    {%- else %}
    result = list {{ case["input"]["score"] }}
    result == Set.fromList [{{ case["expected"] | map('to_pascal') | join(", ") }}]
    {%- endif %}

{% endfor %}
{% endfor %}
