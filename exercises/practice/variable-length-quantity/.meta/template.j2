{%- import "generator_macros.j2" as macros with context -%}
{{ macros.canonical_ref() }}
{{ macros.header() }}

import {{ exercise | to_pascal }} exposing [encode, decode]

{% for supercase in cases %}
##
## {{ supercase["description"] }}
##

{% for case in supercase["cases"] -%}
# {{ case["description"] }}
{%- if case["property"] == "encode" %}
expect
    integers = {{ case["input"]["integers"] | to_roc }} 
    result = encode integers
    expected = {{ case["expected"] | to_roc }} 
    result == expected
{%- else %}
expect
    bytes = {{ case["input"]["integers"] | to_roc }} 
    result = decode bytes
    {%- if case["expected"]["error"] %}
    result |> Result.isErr
    {%- else %}
    expected = Ok {{ case["expected"] | to_roc }} 
    result == expected
    {%- endif %}
{%- endif %}

{% endfor %}
{% endfor %}
