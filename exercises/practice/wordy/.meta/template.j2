{%- import "generator_macros.j2" as macros with context -%}
{{ macros.canonical_ref() }}
{{ macros.header() }}

import {{ exercise | to_pascal }} exposing [answer]

{% set error_map = {
    "unknown operation": "QuestionArgHadAnUnknownOperation",
    "syntax error": "QuestionArgHadASyntaxError",
} -%}

{% for case in cases -%}
# {{ case["description"] }}
expect
    result = {{ case["property"] | to_camel }} {{ case["input"]["question"] | to_roc }}
{%- if case["expected"]["error"] %}
    result == Err ({{ error_map[case["expected"]["error"]] }} {{ case["input"]["question"] | to_roc }})
{%- else %}
    result == Ok {{ case["expected"] }}
{%- endif %}

{% endfor %}
