{%- import "generator_macros.j2" as macros with context -%}
{{ macros.canonical_ref() }}
{{ macros.header() }}

import {{ exercise | to_pascal }} exposing [{{ cases[0]["property"] | to_snake }}]

{% for case in cases -%}
# {{ case["description"] }}
expect
    result = {{ case["property"] | to_snake }} {{ case["input"]["puzzle"] | to_roc }}
    {%- if case["expected"] %}
    Result.withDefault result [] |> Set.fromList == Set.fromList [
    {%- for letter, value in case["expected"].items() %}
        ('{{ letter }}', {{ value }}),
    {%- endfor %}
        ]
    {%- else %}
    Result.isErr result
    {%- endif %}

{% endfor %}
