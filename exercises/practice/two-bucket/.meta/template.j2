{%- import "generator_macros.j2" as macros with context -%}
{{ macros.canonical_ref() }}
{{ macros.header() }}

import {{ exercise | to_pascal }} exposing [{{ cases[0]["property"] | to_camel }}]

{% for case in cases -%}
# {{ case["description"] }}
expect
    result = {{ case["property"] | to_camel }} {
        bucket_one: {{ case["input"]["bucket_one"] }},
        bucket_two: {{ case["input"]["bucket_two"] }},
        goal: {{ case["input"]["goal"] }},
        start_bucket: {{ case["input"]["start_bucket"] | to_pascal }},
    }
    {%- if case["expected"]["error"] %}
    result |> Result.isErr
    {%- else %}
    expected = Ok {
        moves: {{ case["expected"]["moves"] }},
        goal_bucket: {{ case["expected"]["goal_bucket"] | to_pascal }},
        other_bucket: {{ case["expected"]["other_bucket"] }},
    }
    result == expected
    {%- endif %}

{% endfor %}
